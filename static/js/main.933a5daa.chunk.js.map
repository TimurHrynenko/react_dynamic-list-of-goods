{"version":3,"sources":["api/goods.js","Components/GoodsList/GoodsList.jsx","App.js","index.js"],"names":["API_URL","getAll","fetch","then","response","json","get5First","data","sort","good1","good2","name","localeCompare","slice","getRedGoods","filter","color","GoodsList","goods","map","id","key","style","App","state","responseHandler","request","setState","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPACMA,G,MAAO,yEAEN,SAASC,IACd,OAAOC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,kBACvBJ,MAAMF,GACHG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAI,OAAIA,EACXC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,KAAKC,cAAcF,EAAMC,SACtDE,MAAM,EAAG,OAGHC,EAAc,kBACzBZ,MAAMF,GACHG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAI,OAAIA,EAAKQ,QAAO,kBAAyB,QAAzB,EAAGC,aChBpBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,4BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIT,EAAP,EAAOA,KAAMK,EAAb,EAAaA,MAAb,OACT,wBACEK,IAAKD,EACLE,MAAO,CAAEN,UAERL,QC6CMY,E,4MA/CbC,MAAQ,CACNN,MAAO,I,EAGTO,gBAAkB,SAACC,GACjBA,IACGvB,MAAK,SAAAI,GAAI,OAAI,EAAKoB,SAAS,CAAET,MAAM,YAAKX,S,4CAG7C,WAAU,IAAD,OACCW,EAAUU,KAAKJ,MAAfN,MAER,OACE,oCACE,qDACA,6BACE,4BACEW,KAAK,SACLC,QAAS,WACP,EAAKL,gBAAgBxB,KAHzB,kBAQA,4BACE4B,KAAK,SACLC,QAAS,WACP,EAAKL,gBAAgBnB,KAHzB,yBAQA,4BACEuB,KAAK,SACLC,QAAS,WACP,EAAKL,gBAAgBX,KAHzB,uBASF,kBAAC,EAAD,CAAWI,MAAOA,S,GA1CRa,IAAMC,WCHxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.933a5daa.chunk.js","sourcesContent":["// eslint-disable-next-line\r\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\r\n\r\nexport function getAll() {\r\n  return fetch(API_URL)\r\n    .then(response => response.json());\r\n}\r\n\r\nexport const get5First = () => (\r\n  fetch(API_URL)\r\n    .then(response => response.json())\r\n    .then(data => data\r\n      .sort((good1, good2) => good1.name.localeCompare(good2.name))\r\n      .slice(0, 5))\r\n);\r\n\r\nexport const getRedGoods = () => (\r\n  fetch(API_URL)\r\n    .then(response => response.json())\r\n    .then(data => data.filter(({ color }) => color === 'red'))\r\n);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, name, color }) => (\n      <li\n        key={id}\n        style={{ color }}\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })).isRequired,\n};\n","import React from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport { getAll, get5First, getRedGoods } from './api/goods';\r\nimport { GoodsList } from './Components/GoodsList/GoodsList.jsx';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    goods: [],\r\n  }\r\n\r\n  responseHandler = (request) => {\r\n    request()\r\n      .then(data => this.setState({ goods: [...data] }));\r\n  }\r\n\r\n  render() {\r\n    const { goods } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1>Dynamic list of Goods</h1>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.responseHandler(getAll);\r\n            }}\r\n          >\r\n            Load all goods\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.responseHandler(get5First);\r\n            }}\r\n          >\r\n            Load five first goods\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.responseHandler(getRedGoods);\r\n            }}\r\n          >\r\n            Load all red goods\r\n          </button>\r\n        </div>\r\n        <GoodsList goods={goods} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}